drop table if exists REF_FILMS_GENRES cascade;

drop table if exists GENRES cascade;

drop table if exists REF_FILMS_LIKES cascade;

drop table if exists FILMS cascade;

drop table if exists RATING cascade;

drop table if exists REF_FRIENDSHIP cascade;

drop table if exists FRIENDSHIP_STATUSES cascade;

drop table if exists USERS cascade;


CREATE TABLE IF NOT EXISTS rating
(
    id          long generated by default as identity primary key,
    name        varchar(10) NOT NULL UNIQUE,
    description varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS films
(
    id           bigint generated by default as identity primary key,
    name         varchar(255) NOT NULL,
    description  varchar(200),
    release_date date         NOT NULL,
    duration     int          NOT NULL,
    rating_id    int          NOT NULL REFERENCES rating (id) ON DELETE RESTRICT
    );

CREATE TABLE IF NOT EXISTS genres
(
    id   int generated by default as identity primary key,
    name varchar(100) NOT NULL UNIQUE
    );

CREATE TABLE IF NOT EXISTS ref_films_genres
(
    film_id  bigint REFERENCES films (id) ON DELETE CASCADE,
    genre_id int REFERENCES genres (id) ON DELETE RESTRICT,
    PRIMARY KEY (film_id, genre_id)
    );

CREATE TABLE IF NOT EXISTS users
(
    id       bigint generated by default as identity primary key,
    email    varchar(100) NOT NULL,
    login    varchar(100) NOT NULL,
    name     varchar(255),
    birthday date
    );

CREATE TABLE IF NOT EXISTS ref_films_likes
(
    film_id  bigint REFERENCES films (id) ON DELETE CASCADE,
    user_id bigint REFERENCES users (id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, user_id)
    );

CREATE TABLE IF NOT EXISTS friendship_statuses
(
    id int generated by default as identity primary key,
    name varchar(100) NOT NULL,
    description varchar(255)
    );

CREATE TABLE IF NOT EXISTS ref_friendship
(
    user_id bigint REFERENCES users (id) ON DELETE CASCADE,
    friend_id bigint REFERENCES users (id) ON DELETE CASCADE,
    friendship_status_id int REFERENCES friendship_statuses (id) ON DELETE RESTRICT,
    PRIMARY KEY (friend_id, user_id)
);
